//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Supermarket.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SupermarketDBEntities : DbContext
    {
        public SupermarketDBEntities()
            : base("name=SupermarketDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<country> countries { get; set; }
        public virtual DbSet<measuring_unit> measuring_unit { get; set; }
        public virtual DbSet<producer> producers { get; set; }
        public virtual DbSet<product_categories> product_categories { get; set; }
        public virtual DbSet<product_stock> product_stock { get; set; }
        public virtual DbSet<product> products { get; set; }
        public virtual DbSet<receipt> receipts { get; set; }
        public virtual DbSet<sold_products> sold_products { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<user_types> user_types { get; set; }
        public virtual DbSet<user> users { get; set; }
    
        public virtual int edit_category(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("edit_category", idParameter, nameParameter);
        }
    
        public virtual int edit_producer(Nullable<int> id, string name, string country)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("edit_producer", idParameter, nameParameter, countryParameter);
        }
    
        public virtual int edit_product(Nullable<int> id, string name, string bar_code, string category, string producer)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var bar_codeParameter = bar_code != null ?
                new ObjectParameter("bar_code", bar_code) :
                new ObjectParameter("bar_code", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var producerParameter = producer != null ?
                new ObjectParameter("producer", producer) :
                new ObjectParameter("producer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("edit_product", idParameter, nameParameter, bar_codeParameter, categoryParameter, producerParameter);
        }
    
        public virtual int edit_stock(Nullable<int> id, string name, Nullable<double> quantity, Nullable<double> purchase_price, Nullable<double> selling_price, string unit, Nullable<System.DateTime> supplay_date, Nullable<System.DateTime> expiration_date)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(double));
    
            var purchase_priceParameter = purchase_price.HasValue ?
                new ObjectParameter("purchase_price", purchase_price) :
                new ObjectParameter("purchase_price", typeof(double));
    
            var selling_priceParameter = selling_price.HasValue ?
                new ObjectParameter("selling_price", selling_price) :
                new ObjectParameter("selling_price", typeof(double));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            var supplay_dateParameter = supplay_date.HasValue ?
                new ObjectParameter("supplay_date", supplay_date) :
                new ObjectParameter("supplay_date", typeof(System.DateTime));
    
            var expiration_dateParameter = expiration_date.HasValue ?
                new ObjectParameter("expiration_date", expiration_date) :
                new ObjectParameter("expiration_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("edit_stock", idParameter, nameParameter, quantityParameter, purchase_priceParameter, selling_priceParameter, unitParameter, supplay_dateParameter, expiration_dateParameter);
        }
    
        public virtual int edit_user(Nullable<int> id, string name, string password, string user_type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var user_typeParameter = user_type != null ?
                new ObjectParameter("user_type", user_type) :
                new ObjectParameter("user_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("edit_user", idParameter, nameParameter, passwordParameter, user_typeParameter);
        }
    
        public virtual int insert_category(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_category", nameParameter);
        }
    
        public virtual int insert_producer(string name, string country)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_producer", nameParameter, countryParameter);
        }
    
        public virtual int insert_product(string name, string bar_code, string category, string producer)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var bar_codeParameter = bar_code != null ?
                new ObjectParameter("bar_code", bar_code) :
                new ObjectParameter("bar_code", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var producerParameter = producer != null ?
                new ObjectParameter("producer", producer) :
                new ObjectParameter("producer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_product", nameParameter, bar_codeParameter, categoryParameter, producerParameter);
        }
    
        public virtual int insert_product_stock(string name, Nullable<double> quantity, Nullable<double> purchase_price, Nullable<double> selling_price, string unit, Nullable<System.DateTime> supplay_date, Nullable<System.DateTime> expiration_date)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(double));
    
            var purchase_priceParameter = purchase_price.HasValue ?
                new ObjectParameter("purchase_price", purchase_price) :
                new ObjectParameter("purchase_price", typeof(double));
    
            var selling_priceParameter = selling_price.HasValue ?
                new ObjectParameter("selling_price", selling_price) :
                new ObjectParameter("selling_price", typeof(double));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            var supplay_dateParameter = supplay_date.HasValue ?
                new ObjectParameter("supplay_date", supplay_date) :
                new ObjectParameter("supplay_date", typeof(System.DateTime));
    
            var expiration_dateParameter = expiration_date.HasValue ?
                new ObjectParameter("expiration_date", expiration_date) :
                new ObjectParameter("expiration_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_product_stock", nameParameter, quantityParameter, purchase_priceParameter, selling_priceParameter, unitParameter, supplay_dateParameter, expiration_dateParameter);
        }
    
        public virtual int insert_user(string name, string password, string user_type)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var user_typeParameter = user_type != null ?
                new ObjectParameter("user_type", user_type) :
                new ObjectParameter("user_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_user", nameParameter, passwordParameter, user_typeParameter);
        }
    
        public virtual int select_categories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("select_categories");
        }
    
        public virtual ObjectResult<select_category_Result> select_category(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_category_Result>("select_category", nameParameter);
        }
    
        public virtual ObjectResult<select_countries_Result> select_countries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_countries_Result>("select_countries");
        }
    
        public virtual ObjectResult<select_producer_Result> select_producer(string name, string country)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_producer_Result>("select_producer", nameParameter, countryParameter);
        }
    
        public virtual ObjectResult<select_producers_Result> select_producers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_producers_Result>("select_producers");
        }
    
        public virtual ObjectResult<select_product_Result> select_product(string name, string bar_code, string category, string producer)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var bar_codeParameter = bar_code != null ?
                new ObjectParameter("bar_code", bar_code) :
                new ObjectParameter("bar_code", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var producerParameter = producer != null ?
                new ObjectParameter("producer", producer) :
                new ObjectParameter("producer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_product_Result>("select_product", nameParameter, bar_codeParameter, categoryParameter, producerParameter);
        }
    
        public virtual ObjectResult<select_products_Result> select_products()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_products_Result>("select_products");
        }
    
        public virtual ObjectResult<select_stock_Result> select_stock(string name, Nullable<double> quantity, Nullable<double> purchase_price, Nullable<double> selling_price, string unit, Nullable<System.DateTime> supplay_date, Nullable<System.DateTime> expiration_date)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(double));
    
            var purchase_priceParameter = purchase_price.HasValue ?
                new ObjectParameter("purchase_price", purchase_price) :
                new ObjectParameter("purchase_price", typeof(double));
    
            var selling_priceParameter = selling_price.HasValue ?
                new ObjectParameter("selling_price", selling_price) :
                new ObjectParameter("selling_price", typeof(double));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            var supplay_dateParameter = supplay_date.HasValue ?
                new ObjectParameter("supplay_date", supplay_date) :
                new ObjectParameter("supplay_date", typeof(System.DateTime));
    
            var expiration_dateParameter = expiration_date.HasValue ?
                new ObjectParameter("expiration_date", expiration_date) :
                new ObjectParameter("expiration_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_stock_Result>("select_stock", nameParameter, quantityParameter, purchase_priceParameter, selling_priceParameter, unitParameter, supplay_dateParameter, expiration_dateParameter);
        }
    
        public virtual ObjectResult<select_units_Result> select_units()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_units_Result>("select_units");
        }
    
        public virtual ObjectResult<select_user_Result> select_user(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_user_Result>("select_user", idParameter);
        }
    
        public virtual ObjectResult<select_user_types_Result> select_user_types()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_user_types_Result>("select_user_types");
        }
    
        public virtual ObjectResult<select_users_Result> select_users()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_users_Result>("select_users");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int delete_category(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_category", idParameter);
        }
    
        public virtual int delete_producer(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_producer", idParameter);
        }
    
        public virtual int delete_product(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_product", idParameter);
        }
    
        public virtual int delete_stock(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_stock", idParameter);
        }
    
        public virtual int delete_user(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_user", idParameter);
        }
    }
}
